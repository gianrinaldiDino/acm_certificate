name: 'Terragrunt CI'

on:
  push:
    branches:
    - main
  pull_request:

env:
  AWS_REGION: us-east-1
  ENVIRONMENT: staging

jobs:
  Terragrunt:
    name: 'Terragrunt'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials with OIDC
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: arn:aws:iam::214633882441:role/GitHubActionsRole
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup Terraform v1.7.4
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.7.4
        terraform_wrapper: true

    - name: Setup Terraform version
      run: terraform --version

    - name: Setup Terraform wrapper path
      run: which terraform

    - name: Setup Terragrunt v0.50.16
      run: |
        sudo wget -q -O /bin/terragrunt "https://github.com/gruntwork-io/terragrunt/releases/download/v0.50.16/terragrunt_linux_amd64"
        sudo chmod +x /bin/terragrunt
        terragrunt -v

    - name: Initialize Terragrunt in VPC directory
      run: |
        cd environments/${{ env.ENVIRONMENT }}/us-east-1/vpc
        terragrunt init --terragrunt-non-interactive

    - name: Plan Terragrunt in all subdirectories
      run: |
        cd environments/${{ env.ENVIRONMENT }}/us-east-1
        terragrunt run-all plan --terragrunt-non-interactive | tee plan.out

    - name: Debugging step
      run: |
        echo "Checking current directory structure"
        ls -al environments/${{ env.ENVIRONMENT }}/us-east-1
        echo "Validating terragrunt.hcl file"
        terragrunt hclfmt environments/${{ env.ENVIRONMENT }}/us-east-1/vpc/terragrunt.hcl

    - name: Apply Terragrunt if on main branch
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        cd environments/${{ env.ENVIRONMENT }}/us-east-1
        terragrunt run-all apply --terragrunt-non-interactive
