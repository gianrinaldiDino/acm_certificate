name: Deploy Infraestructura Terragrunt

on:
  push:
    branches:
      - staging
  pull_request:
    branches:
      - staging

env:
  AWS_REGION: us-east-1
  ENVIRONMENT: staging
  AWS_OIDC_ROLE_ARN: arn:aws:iam::214633882441:role/GitHubAcionsRole

jobs:
  plan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::214633882441:role/GitHubActionsRole
          aws-region: us-east-1

      - name: Install Terraform and Terragrunt
        run: |
          sudo apt-get update && sudo apt-get install -y unzip
          curl -o terraform.zip https://releases.hashicorp.com/terraform/1.3.0/terraform_1.3.0_linux_amd64.zip
          unzip terraform.zip
          sudo mv terraform /usr/local/bin
          curl -o terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/v0.28.0/terragrunt_linux_amd64
          sudo chmod +x terragrunt
          sudo mv terragrunt /usr/local/bin

      - name: Planificar infraestructura
        run: |
          cd environments/${{ env.ENVIRONMENT }}/${{ env.AWS_REGION }}
          terragrunt run-all plan

      - name: Verificar resultado del plan
        run: |
          if [ $? -ne 0 ]; then
            echo "El plan de Terragrunt fall√≥. Cancelando el deploy."
            exit 1
          fi

  apply:
    needs: plan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::214633882441:role/GitHubActionsRole
          aws-region: us-east-1

      - name: Aplicar infraestructura
        run: |
          cd environments/${{ env.ENVIRONMENT }}/${{ env.AWS_REGION }}
          terragrunt run-all apply --terragrunt-non-interactive plan.tfplan
